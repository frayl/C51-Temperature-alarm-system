C51 COMPILER V9.01   DS18B20                                                               09/04/2018 14:03:36 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN DS18B20.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE DS18B20.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          sbit DQ = P2^2;//温度传感器接口 
   6          bit     f=0;                                              //测量温度的标志位,0’表示“正温度”‘1’表示“负温度”）
   7          bit     f_max=0;                                          //上限温度的标志位‘0’表示“正温度”‘1’表示“负温度”）
   8          bit     f_min=0;                                          //下限温度的标志位‘0’表示“正温度”‘1’表示“负温度”）
   9          extern uint wen_du;               //温度变量  
  10          uchar max=0x00,min=0x00;                   //max是上限报警温度，min是下限报警温度
  11          uchar   temp=0;                                   //测量温度的整数部分
  12          uchar   temp_d=0;                             //测量温度的小数部
  13          
  14          /***********ds18b20延迟子函数*******/
  15          void delay_18B20(uint i)
  16          {
  17   1              while(i--);
  18   1      }
  19          /**********ds18b20初始化函数**********************/
  20          void Init_DS18B20()
  21          {
  22   1              uchar x=0;
  23   1              DQ=1;          //DQ复位
  24   1              delay_18B20(8);  //稍做延时
  25   1              DQ=0;          //单片机将DQ拉低
  26   1              delay_18B20(80); //精确延时 大于 480us
  27   1              DQ=1;          //拉高总线
  28   1              delay_18B20(14);
  29   1              x=DQ;            //稍做延时后 如果x=0则初始化成功 x=1则初始化失败
  30   1              delay_18B20(20);
  31   1      }
  32          /***********ds18b20读一个字节**************/  
  33          uchar ReadOneChar()
  34          {
  35   1              uchar i;
  36   1              uchar dat=0;
  37   1              for (i=8;i>0;i--)
  38   1              {
  39   2                      DQ=0; // 给脉冲信号
  40   2                      dat>>=1;
  41   2                      DQ=1; // 给脉冲信号
  42   2                      if(DQ)
  43   2                      {
  44   3                              dat|=0x80;
  45   3                      }
  46   2                      delay_18B20(4);
  47   2              }
  48   1              return(dat);
  49   1      }
  50          /*************ds18b20写一个字节****************/  
  51          void WriteOneChar(uchar dat)
  52          {
  53   1              uchar i;
  54   1              for (i=8;i>0;i--)
  55   1              {
C51 COMPILER V9.01   DS18B20                                                               09/04/2018 14:03:36 PAGE 2   

  56   2                      DQ=0;
  57   2                      DQ=dat&0x01;
  58   2                      delay_18B20(5);
  59   2                      DQ=1;
  60   2                      dat>>=1;
  61   2              }
  62   1      }
  63          /**************读取ds18b20当前温度************/
  64          void ReadTemperature()
  65          {
  66   1              float tt;
  67   1              uchar a=0,b=0;
  68   1              Init_DS18B20();
  69   1              WriteOneChar(0xCC);         // 跳过读序号列号的操作
  70   1              WriteOneChar(0x44);         // 启动温度转换
  71   1              delay_18B20(100);       
  72   1              Init_DS18B20();
  73   1              WriteOneChar(0xCC);         //跳过读序号列号的操作
  74   1              WriteOneChar(0xBE);         //读取温度寄存器等（共可读9个寄存器） 前两个就是温度
  75   1              delay_18B20(100);
  76   1              a=ReadOneChar();            //读取温度值低位
  77   1              b=ReadOneChar();            //读取温度值高位
  78   1              wen_du=b;
  79   1              wen_du<<=8;             //two byte  compose a int variable
  80   1              wen_du=wen_du|a;
  81   1              tt=wen_du*0.0625;
  82   1              wen_du=tt*10+0.5;
  83   1              //wen_du=((b*256+a)>>4);    //当前采集温度值除16得实际温度值
  84   1              /*wen_du=b;
  85   1              wen_du<<=8;             
  86   1              wen_du=wen_du|a;
  87   1              tt=wen_du*0.0625;
  88   1              wen_du=tt*10+0.5; */
  89   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    229    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
