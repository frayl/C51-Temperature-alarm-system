C51 COMPILER V9.01   ISP                                                                   09/04/2018 14:03:35 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ISP
OBJECT MODULE PLACED IN ISP.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ISP.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #include <intrins.h>
   3          
   4          sfr ISP_DATA =  0xe2; //Flash数据寄存器地址（E2h）
   5          sfr ISP_ADDRH = 0xe3;//Flash高字节寄存器地址（E3h）
   6          sfr ISP_ADDRL = 0xe4;//Flash低字节寄存器地址（E4h）
   7          sfr ISP_CMD =   0xe5;  //Flash命令模式寄存器地址（E5h）
   8          sfr ISP_TRIG =  0xe6; //Flash命令触发寄存器地址（E6h）
   9          sfr ISP_CONTR = 0xe7;//Flash控制寄存器地址（E7h）
  10          #define uchar unsigned char
  11          #define WaitTime 0x81 //定义CPU的等待时间  在ISPEN=1时,对ISP_TRIG （命令触发寄存器）先写入46h，再写入B9h，
             -ISP/IAP命令才会生效。
  12          #define RdCmd 0x01 //定义ISP的操作命令 
  13          #define PrgCmd 0x02 
  14          #define EraseCmd 0x03
  15          
  16          void ISP_IAP_enable(void);                  /* ================ 打开 ISP,IAP 功能 ================= */
  17          void ISP_IAP_disable(void);                 /* =============== 关闭 ISP,IAP 功能 ================== */ 
  18          void ISP_trig(void);                        /* ================ 公用的触发代码 ==================== */
  19          uchar byte_read(unsigned int byte_addr);    /* ============ 字节读 ============= */ 
  20          void SectorErase(unsigned int sector_addr); /* =========== 扇区擦除 ============ */ 
  21          void byte_write(unsigned int byte_addr, unsigned char dat); /* ==== 字节写 ==== */
  22          
  23          void ISP_IAP_enable(void) /*================ 打开 ISP,IAP 功能 =================*/ 
  24          {
  25   1              EA = 0;                             //关中断
  26   1              ISP_CONTR = ISP_CONTR & 0x18;       //ISP/IAP控制寄存器复位 
  27   1              ISP_CONTR = ISP_CONTR | WaitTime;   //(10000001) ISPEN = 1写入硬件延时
  28   1      } 
  29          void ISP_IAP_disable(void) /*=============== 关闭 ISP,IAP 功能 ==================*/ 
  30          { 
  31   1              ISP_CONTR = ISP_CONTR & 0x7f;       //(01111111)ISPEN = 0
  32   1              ISP_TRIG = 0x00;                                        //清除ISP_TRIG寄存器
  33   1              EA = 1;                             //开中断
  34   1      } 
  35          void ISP_trig(void) /*================触发代码 ====================*/ 
  36          { 
  37   1              ISP_IAP_enable(); 
  38   1              ISP_TRIG = 0x46; //触发ISP_IAP命令高字节ISP_ADDRH写入     对ISP_TRIG先写入46h，
  39   1              ISP_TRIG = 0xb9; //触发ISP_IAP命令低字节ISP_ADDRL写入     再写入B9h，ISP/IAP命令才会生效。 
  40   1              _nop_(); 
  41   1      } 
  42          unsigned char byte_read(unsigned int byte_addr) /*========= 字节读 =============*/ 
  43          { 
  44   1              ISP_ADDRH = (unsigned char)(byte_addr >> 8);     //读出byte_addr的高八位
  45   1              ISP_ADDRL = (unsigned char)(byte_addr & 0x00ff); //读出byte_addr的低八位
  46   1              ISP_CMD   = ISP_CMD & 0xf8;   //(11111000)清除低3位 
  47   1              ISP_CMD   = ISP_CMD | RdCmd;  //写入读命令  
  48   1              ISP_trig();                   //触发执行 
  49   1              ISP_IAP_disable();            //关闭ISP,IAP功能 
  50   1              return (ISP_DATA);            //返回读到的数据 
  51   1      } 
  52          void SectorErase(unsigned int sector_addr) /*=========== 扇区擦除 ============*/ 
  53          { 
  54   1              unsigned int iSectorAddr; 
C51 COMPILER V9.01   ISP                                                                   09/04/2018 14:03:35 PAGE 2   

  55   1              iSectorAddr = (sector_addr & 0xfe00); //取扇区地址 
  56   1              ISP_ADDRH = (unsigned char)(iSectorAddr >> 8); 
  57   1              ISP_ADDRL = 0x00; 
  58   1              ISP_CMD = ISP_CMD & 0xf8;     //(11111000)清除低3位
  59   1              ISP_CMD = ISP_CMD | EraseCmd; //写入扇区擦除命令 
  60   1              ISP_trig();                               //触发执行 
  61   1              ISP_IAP_disable();            //关闭ISP,IAP功能
  62   1      } 
  63          void byte_write(unsigned int byte_addr, unsigned char dat) /*==== 字节写 ====*/ 
  64          { 
  65   1              ISP_ADDRH = (unsigned char)(byte_addr >> 8);     //读出byte_addr的高八位
  66   1              ISP_ADDRL = (unsigned char)(byte_addr & 0x00ff); //读出byte_addr的低八位
  67   1              ISP_CMD  = ISP_CMD & 0xf8;    //(11111000)清除低3位
  68   1              ISP_CMD  = ISP_CMD | PrgCmd;  //写入写命令 
  69   1              ISP_DATA = dat;               //写入数据准备 
  70   1              ISP_trig();                   //触发执行 
  71   1              ISP_IAP_disable();            //关闭ISP,IAP功能 
  72   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     97    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
